{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-06T08:45:55.474Z"}
{"level":"info","message":"GET / ::1 Mozilla/5.0 (Windows NT; Windows NT 10.0; en-IN) WindowsPowerShell/5.1.22621.2506","timestamp":"2024-04-06T08:46:25.424Z"}
{"level":"info","message":"GET /api ::ffff:127.0.0.1 Mozilla/5.0 (Windows NT; Windows NT 10.0; en-IN) WindowsPowerShell/5.1.22621.2506","timestamp":"2024-04-06T08:47:15.109Z"}
{"level":"info","message":"API is working","timestamp":"2024-04-06T08:47:15.112Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-06T17:30:16.730Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-06T18:03:38.414Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-06T18:03:38.472Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-06T18:05:02.768Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-06T18:05:02.816Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-06T18:09:46.824Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-06T18:11:09.112Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-06T18:11:09.211Z"}
{"level":"info","message":"GET /api/users ::1 Mozilla/5.0 (Windows NT; Windows NT 10.0; en-IN) WindowsPowerShell/5.1.22621.2506","timestamp":"2024-04-06T18:11:34.925Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-06T18:17:58.648Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-06T18:17:58.749Z"}
{"level":"info","message":"POST /api/users ::1 Mozilla/5.0 (Windows NT; Windows NT 10.0; en-IN) WindowsPowerShell/5.1.22621.2506","timestamp":"2024-04-06T18:28:03.902Z"}
{"level":"info","message":"GET /api/users ::1 Mozilla/5.0 (Windows NT; Windows NT 10.0; en-IN) WindowsPowerShell/5.1.22621.2506","timestamp":"2024-04-06T18:28:41.299Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-06T18:45:24.908Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-06T18:45:25.022Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-06T19:23:00.785Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-06T19:23:00.874Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-06T20:06:14.623Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-06T20:06:14.725Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-06T20:13:56.086Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-06T20:13:56.187Z"}
{"level":"info","message":"GET /api/routes ::1 Mozilla/5.0 (Windows NT; Windows NT 10.0; en-IN) WindowsPowerShell/5.1.22621.2506","timestamp":"2024-04-06T20:14:33.415Z"}
{"level":"info","message":"Getting all the routes","timestamp":"2024-04-06T20:14:33.432Z"}
{"level":"info","message":"GET /api/routes:456 ::1 Mozilla/5.0 (Windows NT; Windows NT 10.0; en-IN) WindowsPowerShell/5.1.22621.2506","timestamp":"2024-04-06T20:14:46.865Z"}
{"level":"info","message":"GET /api/routes/456 ::1 Mozilla/5.0 (Windows NT; Windows NT 10.0; en-IN) WindowsPowerShell/5.1.22621.2506","timestamp":"2024-04-06T20:14:59.570Z"}
{"level":"info","message":"Getting the route with id 456","timestamp":"2024-04-06T20:14:59.582Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-06T20:15:29.476Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-06T20:15:29.556Z"}
{"level":"info","message":"GET /api/routes/456 ::1 Mozilla/5.0 (Windows NT; Windows NT 10.0; en-IN) WindowsPowerShell/5.1.22621.2506","timestamp":"2024-04-06T20:15:30.465Z"}
{"level":"error","message":"Route with id 456 not found","timestamp":"2024-04-06T20:15:30.478Z"}
{"level":"info","message":"POST /api/routes ::1 Mozilla/5.0 (Windows NT; Windows NT 10.0; en-IN) WindowsPowerShell/5.1.22621.2506","timestamp":"2024-04-06T20:18:49.821Z"}
{"level":"info","message":"Creating a new route","timestamp":"2024-04-06T20:18:49.830Z"}
{"level":"info","message":"GET /api/routes/17baf8fe-a88e-4822-9ab4-c8cb1e335eb1 ::1 Mozilla/5.0 (Windows NT; Windows NT 10.0; en-IN) WindowsPowerShell/5.1.22621.2506","timestamp":"2024-04-06T20:19:20.958Z"}
{"level":"info","message":"Getting the route with id 17baf8fe-a88e-4822-9ab4-c8cb1e335eb1","timestamp":"2024-04-06T20:19:20.964Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-06T20:20:23.712Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-06T20:20:23.792Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-06T20:22:18.496Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-06T20:22:18.827Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-06T20:22:18.956Z"}
{"level":"info","message":"GET /api/routes/17baf8fe-a88e-4822-9ab4-c8cb1e335eb1 ::1 Mozilla/5.0 (Windows NT; Windows NT 10.0; en-IN) WindowsPowerShell/5.1.22621.2506","timestamp":"2024-04-06T20:22:40.286Z"}
{"level":"error","message":"Route with id 17baf8fe-a88e-4822-9ab4-c8cb1e335eb1 not found","timestamp":"2024-04-06T20:22:40.299Z"}{"level":"info","message":"Environment: testing","timestamp":"2024-04-08T12:10:40.566Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-08T12:10:40.891Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-08T12:10:41.002Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-08T13:31:00.402Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-08T13:31:00.608Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-08T13:48:09.071Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-08T13:48:09.273Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T05:48:51.869Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T05:48:52.153Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T05:49:57.496Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T05:49:57.682Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T05:51:01.687Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T05:51:01.871Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T05:51:30.187Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T05:51:30.369Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T05:52:18.982Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T05:52:19.166Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T11:50:44.505Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T11:50:44.763Z"}
{"level":"error","name":"SequelizeConnectionRefusedError","original":{"address":"::1","code":"ECONNREFUSED","errno":-4078,"port":5432,"syscall":"connect"},"parent":{"address":"::1","code":"ECONNREFUSED","errno":-4078,"port":5432,"syscall":"connect"},"timestamp":"2024-04-09T11:50:44.775Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T12:06:41.001Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T12:06:41.298Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T12:11:00.531Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T12:11:00.721Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T18:13:10.504Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T18:13:10.994Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T18:22:49.854Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T18:22:50.205Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T18:23:47.094Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T18:23:47.392Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T18:25:15.354Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T18:25:15.654Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T18:28:48.779Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T18:28:49.077Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T18:29:54.655Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T18:29:55.013Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T18:39:24.480Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T18:39:24.780Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T18:39:42.873Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T18:39:43.315Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T18:43:33.390Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T18:43:33.805Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T18:43:42.152Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T18:43:42.562Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T18:45:38.175Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T18:45:38.459Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T18:46:29.393Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T18:46:29.684Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-09T18:46:29.837Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T18:47:45.155Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T18:47:45.468Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-09T18:47:45.629Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T18:50:16.283Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T18:50:16.593Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-09T18:50:16.681Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T18:51:32.050Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T18:51:32.356Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T18:55:03.306Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T18:55:03.631Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T18:55:27.553Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T18:55:27.920Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T18:59:25.826Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T18:59:26.122Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T19:00:31.257Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T19:00:31.602Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T19:01:32.439Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T19:01:32.823Z"}
{"level":"info","message":"POST //api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T19:03:46.387Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T19:03:56.164Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T19:14:49.350Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T19:14:49.688Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T19:27:57.490Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T19:27:57.857Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T19:29:18.314Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T19:29:18.614Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T19:30:50.638Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T19:30:50.940Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T19:33:46.245Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T19:33:46.556Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T19:34:22.922Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T19:35:29.082Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T19:35:29.400Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T19:35:43.804Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T19:37:11.454Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T19:37:11.770Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T19:37:22.846Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T19:38:11.467Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T19:38:11.744Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T19:38:20.639Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T19:39:50.187Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T19:39:50.388Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T19:39:56.450Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T19:40:52.041Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T19:40:52.232Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T19:40:58.769Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T19:41:22.317Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T19:41:22.521Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T19:41:29.112Z"}
{"level":"error","message":"Invalid credentials","timestamp":"2024-04-09T19:41:29.276Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T19:43:44.861Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T19:43:45.043Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T19:43:48.076Z"}
{"level":"error","message":"Invalid credentials","timestamp":"2024-04-09T19:43:48.145Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T19:45:07.226Z"}
{"level":"error","message":"Invalid credentials","timestamp":"2024-04-09T19:45:07.297Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T19:45:43.385Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T19:50:28.091Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T19:50:28.283Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T19:55:06.160Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T19:55:06.349Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T19:55:29.108Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T19:57:55.685Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T19:57:55.878Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T19:58:11.720Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T19:58:34.322Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T20:00:39.603Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T20:00:39.801Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T20:00:45.223Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T20:01:10.770Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T20:05:51.955Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T20:05:52.143Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-09T20:05:52.202Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T20:05:59.967Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T20:06:22.061Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T20:06:25.648Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T20:06:36.586Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T20:08:09.492Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T20:08:09.681Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-09T20:08:09.741Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T20:08:12.878Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T20:08:43.677Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T20:08:43.862Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-09T20:08:43.922Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T20:08:45.909Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T20:09:26.553Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T20:09:26.742Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-09T20:09:26.805Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T20:09:28.913Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T20:11:12.592Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T20:11:12.776Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-09T20:11:12.836Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T20:11:15.513Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T20:11:43.702Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T20:11:54.826Z"}
{"level":"info","message":"PUT /api/v1/users/6583b533-80ec-4c10-84ff-03bd992f1111 ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T20:19:43.197Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T20:20:28.166Z"}
{"level":"info","message":"PUT /api/v1/users/6583b533-80ec-4c10-84ff-03bd992f1111 ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T20:20:40.404Z"}
{"level":"info","message":"PUT /api/v1/users/6583b533-80ec-4c10-84ff-03bd992f1111 ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T20:20:41.633Z"}
{"level":"info","message":"PUT /api/v1/users/6583b533-80ec-4c10-84ff-03bd992f1111 ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T20:20:42.710Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T20:21:05.466Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T20:21:05.655Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-09T20:21:05.720Z"}
{"level":"info","message":"PUT /api/v1/users/6583b533-80ec-4c10-84ff-03bd992f1111 ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T20:21:09.531Z"}
{"level":"info","message":"Updating the user with id 6583b533-80ec-4c10-84ff-03bd992f1111","timestamp":"2024-04-09T20:21:09.658Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T20:21:26.157Z"}
{"level":"error","message":"Invalid credentials","timestamp":"2024-04-09T20:21:26.227Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T20:21:48.408Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T20:26:51.210Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T20:26:51.398Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T20:27:02.791Z"}
{"level":"error","message":"Invalid credentials","timestamp":"2024-04-09T20:27:02.871Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T20:27:15.264Z"}
{"level":"info","message":"PUT /api/v1/users/6583b533-80ec-4c10-84ff-03bd992f1111 ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T20:28:13.068Z"}
{"level":"error","message":"User not found while verifying token","timestamp":"2024-04-09T20:28:13.084Z"}
{"level":"info","message":"PUT /api/v1/users/6583b533-80ec-4c10-84ff-03bd992f1111 ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T20:28:53.046Z"}
{"level":"error","message":"User with id 6583b533-80ec-4c10-84ff-03bd992f1111 not found","timestamp":"2024-04-09T20:28:53.061Z"}
{"level":"info","message":"PUT /api/v1/users/b590d71b-8966-4976-bdc0-1fc0c52fe37c ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T20:29:17.352Z"}
{"level":"info","message":"Updating the user with id b590d71b-8966-4976-bdc0-1fc0c52fe37c","timestamp":"2024-04-09T20:29:17.476Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T20:30:33.699Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T20:30:33.886Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T20:31:17.295Z"}
{"level":"info","message":"PUT /api/v1/users/3a51a9ee-0535-4e5c-80dd-c018e8a0ff5a ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T20:31:56.623Z"}
{"level":"error","message":"User not found while verifying token","timestamp":"2024-04-09T20:31:56.648Z"}
{"level":"info","message":"PUT /api/v1/users/3a51a9ee-0535-4e5c-80dd-c018e8a0ff5a ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T20:32:27.838Z"}
{"level":"info","message":"PUT /api/v1/users/3a51a9ee-0535-4e5c-80dd-c018e8a0ff5a ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T20:32:59.475Z"}
{"level":"info","message":"PUT /api/v1/users/3a51a9ee-0535-4e5c-80dd-c018e8a0ff5a ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T20:33:24.023Z"}
{"level":"info","message":"Updating the user with id 3a51a9ee-0535-4e5c-80dd-c018e8a0ff5a","timestamp":"2024-04-09T20:33:24.277Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T20:34:40.046Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T20:34:40.232Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T20:34:58.675Z"}
{"level":"info","message":"PUT /api/v1/users/c2c2b77b-bde5-4038-b94e-df55f1accad7 ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T20:35:41.418Z"}
{"level":"info","message":"Updating the user with id c2c2b77b-bde5-4038-b94e-df55f1accad7","timestamp":"2024-04-09T20:35:41.555Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-09T20:37:21.937Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-09T20:37:22.293Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-09T20:37:22.394Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T20:37:26.397Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T20:37:38.016Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T20:38:00.110Z"}
{"level":"error","message":"Invalid credentials","timestamp":"2024-04-09T20:38:00.286Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-09T20:38:07.976Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T03:42:02.610Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T03:42:03.047Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T03:42:03.158Z"}
{"level":"info","message":"GET /api/v1/users/c2c2b77b-bde5-4038-b94e-df55f1accad7 ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T03:42:07.192Z"}
{"level":"info","message":"GET /api/v1/users/c2c2b77b-bde5-4038-b94e-df55f1accad7 ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T03:42:46.276Z"}
{"level":"info","message":"Getting the user with id c2c2b77b-bde5-4038-b94e-df55f1accad7","timestamp":"2024-04-10T03:42:46.307Z"}
{"level":"info","message":"GET /api/v1/users/ ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T03:52:55.324Z"}
{"level":"info","message":"Getting all the users","timestamp":"2024-04-10T03:52:55.362Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T04:04:49.328Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T04:04:49.684Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T04:04:49.796Z"}
{"level":"info","message":"GET /api/v1/users/ ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T04:04:55.161Z"}
{"level":"info","message":"Getting all the users","timestamp":"2024-04-10T04:04:55.179Z"}
{"level":"info","message":"GET /api/v1/users/ ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T04:08:26.663Z"}
{"level":"error","message":"Unauthorized access","timestamp":"2024-04-10T04:08:26.691Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T04:09:30.799Z"}
{"level":"error","message":"Invalid credentials","timestamp":"2024-04-10T04:09:30.912Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T04:09:46.933Z"}
{"level":"error","message":"Invalid credentials","timestamp":"2024-04-10T04:09:47.028Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T04:10:06.329Z"}
{"level":"error","message":"Invalid credentials","timestamp":"2024-04-10T04:10:06.511Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T04:10:17.309Z"}
{"level":"info","message":"GET /api/v1/users/ ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T04:10:37.984Z"}
{"level":"info","message":"Getting all the users","timestamp":"2024-04-10T04:10:38.010Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T04:13:03.338Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T04:13:03.744Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T04:13:03.829Z"}
{"level":"info","message":"POST / ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T04:14:10.225Z"}
{"level":"info","message":"POST /api/v1/users/ ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T04:14:28.620Z"}
{"level":"info","message":"Creating a new user","timestamp":"2024-04-10T04:14:28.871Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T04:28:52.924Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T04:28:53.330Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T04:28:53.472Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T04:56:36.014Z"}
{"level":"info","message":"GET /api/v1/users/ ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T04:57:10.491Z"}
{"level":"error","message":"Unauthorized access","timestamp":"2024-04-10T04:57:10.523Z"}
{"level":"info","message":"GET /api/v1/users/ ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T04:57:25.204Z"}
{"level":"info","message":"Getting all the users","timestamp":"2024-04-10T04:57:25.249Z"}
{"level":"info","message":"GET /api/v1/customer ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T04:58:58.578Z"}
{"level":"info","message":"Getting all the customers","timestamp":"2024-04-10T04:58:58.609Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T05:18:00.217Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T05:18:00.601Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T05:20:51.379Z"}
{"level":"info","message":"POST /api/v1/routes ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T05:21:36.051Z"}
{"level":"info","message":"Creating a new route","timestamp":"2024-04-10T05:21:36.233Z"}
{"level":"info","message":"PUT /api/v1/routes/472ed20b-872c-4aa1-be44-a6e0dcfdbf04 ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T05:26:54.889Z"}
{"level":"info","message":"Updating the route with id 472ed20b-872c-4aa1-be44-a6e0dcfdbf04","timestamp":"2024-04-10T05:26:54.917Z"}
{"level":"info","message":"POST /api/v1/users/ ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T05:32:21.992Z"}
{"level":"error","message":"User not found while verifying token","timestamp":"2024-04-10T05:32:22.016Z"}
{"level":"info","message":"POST /api/v1/users/ ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T05:32:55.368Z"}
{"level":"info","message":"Creating a new user","timestamp":"2024-04-10T05:32:55.567Z"}
{"level":"info","message":"GET /api/v1/routes ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T05:36:04.983Z"}
{"level":"info","message":"Getting all the routes","timestamp":"2024-04-10T05:36:05.000Z"}
{"level":"info","message":"GET /search/che ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T05:39:23.809Z"}
{"level":"info","message":"GET /api/v1/routes/search/che ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T05:40:12.223Z"}
{"level":"info","message":"Searching for route with name che","timestamp":"2024-04-10T05:40:12.246Z"}
{"level":"info","message":"GET /api/v1/routes/search/new ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T05:40:29.176Z"}
{"level":"info","message":"Searching for route with name new","timestamp":"2024-04-10T05:40:29.191Z"}
{"level":"info","message":"GET /api/v1/routes/search/new-routes1 ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T05:40:39.642Z"}
{"level":"info","message":"Searching for route with name new-routes1","timestamp":"2024-04-10T05:40:39.660Z"}
{"level":"info","message":"GET /api/v1/routes/search/new-ro ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T05:41:04.598Z"}
{"level":"info","message":"Searching for route with name new-ro","timestamp":"2024-04-10T05:41:04.611Z"}
{"level":"info","message":"POST /api/v1/routes ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T05:41:14.121Z"}
{"level":"info","message":"Creating a new route","timestamp":"2024-04-10T05:41:14.177Z"}
{"level":"info","message":"GET /api/v1/routes/search/ch ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T05:41:30.595Z"}
{"level":"info","message":"Searching for route with name ch","timestamp":"2024-04-10T05:41:30.616Z"}
{"level":"info","message":"GET /api/v1/routes/search/ch ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T05:42:27.930Z"}
{"level":"info","message":"Searching for route with name ch","timestamp":"2024-04-10T05:42:27.955Z"}
{"level":"info","message":"POST /api/v1/routes ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T05:42:50.289Z"}
{"level":"info","message":"Creating a new route","timestamp":"2024-04-10T05:42:50.363Z"}
{"level":"info","message":"GET /api/v1/routes/search/ch ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T05:43:22.720Z"}
{"level":"info","message":"Searching for route with name ch","timestamp":"2024-04-10T05:43:22.743Z"}
{"level":"info","message":"POST /api/v1/users/login ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T05:47:26.845Z"}
{"level":"info","message":"GET /api/v1/routes/search/ch ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T05:47:52.376Z"}
{"level":"info","message":"Searching for route with name ch","timestamp":"2024-04-10T05:47:52.415Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T06:03:01.396Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T06:03:01.755Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T06:03:01.843Z"}
{"level":"info","message":"POST /api/v1/routes ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T06:03:08.165Z"}
{"level":"info","message":"Creating a new route","timestamp":"2024-04-10T06:03:08.242Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T06:07:11.868Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T06:07:12.252Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T06:07:12.360Z"}
{"level":"info","message":"POST /api/v1/routes ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T06:07:17.004Z"}
{"level":"error","message":"Route with name checking-2 already exists","timestamp":"2024-04-10T06:07:17.020Z"}
{"level":"error","message":"Error while creating a new route","timestamp":"2024-04-10T06:07:17.023Z"}
{"level":"info","message":"POST /api/v1/routes ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T06:07:41.603Z"}
{"level":"error","message":"Route with name checking-2 already exists","timestamp":"2024-04-10T06:07:41.637Z"}
{"level":"error","message":"Error while creating a new route","timestamp":"2024-04-10T06:07:41.637Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T06:08:08.269Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T06:08:08.602Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T06:08:08.698Z"}
{"level":"info","message":"POST /api/v1/routes ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T06:08:10.656Z"}
{"level":"error","message":"Route with name checking-2 already exists","timestamp":"2024-04-10T06:08:10.673Z"}
{"level":"error","message":"Error while creating a new route","timestamp":"2024-04-10T06:08:10.674Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T06:08:39.125Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T06:08:39.470Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T06:08:39.573Z"}
{"level":"info","message":"POST /api/v1/routes ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T06:08:42.057Z"}
{"level":"error","message":"Route with name checking-2 already exists","timestamp":"2024-04-10T06:08:42.072Z"}
{"level":"error","message":"Error while creating a new route Route with name checking-2 already exists","stack":"Error: Route with name checking-2 already exists\n    at Function.beforeCreate (C:\\codes\\Work Code\\Water Management system\\src\\models\\routes.model.ts:36:23)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Function.runHooks (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\hooks.js:131:7)\n    at async model.save (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:4090:7)\n    at async Function.create (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:2305:12)\n    at async Object.createRoute (C:\\codes\\Work Code\\Water Management system\\src\\controllers\\routes.controller.ts:32:27)","timestamp":"2024-04-10T06:08:42.109Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T06:09:27.581Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T06:09:27.982Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T06:09:28.075Z"}
{"level":"info","message":"POST /api/v1/routes ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T06:09:30.889Z"}
{"level":"info","message":"Creating a new route","timestamp":"2024-04-10T06:09:30.901Z"}
{"level":"error","message":"Route with name checking-2 already exists","timestamp":"2024-04-10T06:09:30.912Z"}
{"level":"error","message":"Error while creating a new route Route with name checking-2 already exists","stack":"Error: Route with name checking-2 already exists\n    at Function.beforeCreate (C:\\codes\\Work Code\\Water Management system\\src\\models\\routes.model.ts:36:23)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Function.runHooks (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\hooks.js:131:7)\n    at async model.save (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:4090:7)\n    at async Function.create (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:2305:12)\n    at async Object.createRoute (C:\\codes\\Work Code\\Water Management system\\src\\controllers\\routes.controller.ts:33:27)","timestamp":"2024-04-10T06:09:30.944Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T06:10:45.807Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T06:10:46.128Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T06:10:46.234Z"}
{"level":"info","message":"POST /api/v1/routes ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T06:10:49.299Z"}
{"level":"info","message":"Creating a new route","timestamp":"2024-04-10T06:10:49.313Z"}
{"level":"error","message":"Route with name checking-2 already exists","timestamp":"2024-04-10T06:10:49.319Z"}
{"level":"error","message":"Error while creating a new route Route with name checking-2 already exists","stack":"Error: Route with name checking-2 already exists\n    at Function.beforeCreate (C:\\codes\\Work Code\\Water Management system\\src\\models\\routes.model.ts:36:23)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Function.runHooks (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\hooks.js:131:7)\n    at async model.save (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:4090:7)\n    at async Function.create (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:2305:12)\n    at async Object.createRoute (C:\\codes\\Work Code\\Water Management system\\src\\controllers\\routes.controller.ts:33:27)","timestamp":"2024-04-10T06:10:49.345Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T06:11:11.155Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T06:11:11.472Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T06:11:11.581Z"}
{"level":"info","message":"POST /api/v1/routes ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T06:11:13.896Z"}
{"level":"info","message":"Creating a new route","timestamp":"2024-04-10T06:11:13.911Z"}
{"level":"error","message":"Route with name checking-2 already exists","timestamp":"2024-04-10T06:11:13.917Z"}
{"level":"error","message":"Error while creating a new route Route with name checking-2 already exists","stack":"Error: Route with name checking-2 already exists\n    at Function.beforeCreate (C:\\codes\\Work Code\\Water Management system\\src\\models\\routes.model.ts:36:23)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Function.runHooks (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\hooks.js:131:7)\n    at async model.save (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:4090:7)\n    at async Function.create (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:2305:12)\n    at async Object.createRoute (C:\\codes\\Work Code\\Water Management system\\src\\controllers\\routes.controller.ts:33:27)","timestamp":"2024-04-10T06:11:13.941Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T06:12:41.441Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T06:12:41.827Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T06:12:41.947Z"}
{"level":"info","message":"POST /api/v1/routes ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T06:12:45.849Z"}
{"level":"info","message":"Creating a new route","timestamp":"2024-04-10T06:12:45.859Z"}
{"level":"error","message":"Route with name checking-2 already exists","timestamp":"2024-04-10T06:12:45.865Z"}
{"level":"error","message":"Error while creating a new route Route with name checking-2 already exists","stack":"Error: Route with name checking-2 already exists\n    at Function.beforeCreate (C:\\codes\\Work Code\\Water Management system\\src\\models\\routes.model.ts:36:23)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Function.runHooks (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\hooks.js:131:7)\n    at async model.save (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:4090:7)\n    at async Function.create (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:2305:12)\n    at async Object.createRoute (C:\\codes\\Work Code\\Water Management system\\src\\controllers\\routes.controller.ts:33:27)","timestamp":"2024-04-10T06:12:45.887Z"}
{"level":"info","message":"GET /api/v1/routes/search/ch ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T06:13:19.626Z"}
{"level":"info","message":"Searching for route with name ch","timestamp":"2024-04-10T06:13:19.659Z"}
{"level":"info","message":"GET /api/v1/routes/search/user ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T06:13:26.943Z"}
{"level":"info","message":"Searching for route with name user","timestamp":"2024-04-10T06:13:26.954Z"}
{"level":"info","message":"GET /api/v1/routes/search/ ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T06:13:33.059Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T06:14:13.832Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T06:14:14.199Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T06:14:14.301Z"}
{"level":"info","message":"GET /api/v1/routes/search/ ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T06:14:16.317Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T06:14:43.130Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T06:14:43.444Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T06:14:43.545Z"}
{"level":"info","message":"GET /api/v1/routes/search/ ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T06:14:45.641Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T06:17:20.382Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T06:17:20.928Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T06:17:21.031Z"}
{"level":"info","message":"GET /api/v1/routes/search/ch ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T06:17:25.266Z"}
{"level":"info","message":"Searching for route with name ch","timestamp":"2024-04-10T06:17:25.279Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T10:23:34.120Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T10:23:34.695Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T10:23:34.856Z"}
{"level":"info","message":"GET /api/v1/routes/search/ch ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T10:23:46.962Z"}
{"level":"info","message":"Searching for route with name ch","timestamp":"2024-04-10T10:23:47.040Z"}
{"level":"info","message":"GET /api/v1/routes/search/ ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T10:23:54.170Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T10:25:22.801Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T10:25:23.217Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T10:25:23.322Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T10:26:32.462Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T10:26:32.809Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T10:26:32.917Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T10:44:31.035Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T10:44:31.407Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T10:44:31.527Z"}
{"level":"info","message":"GET /api/v1/routes/search/ch ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T10:45:09.834Z"}
{"level":"info","message":"Searching for route with name ch","timestamp":"2024-04-10T10:45:09.888Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T10:52:22.700Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T10:52:23.061Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T10:52:23.172Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T10:52:40.384Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T10:52:40.740Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T10:52:40.843Z"}
{"level":"info","message":"POST /api/v1/customer ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T10:55:00.955Z"}
{"level":"info","message":"POST /api/v1/customer ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T10:55:19.731Z"}
{"level":"error","message":"Error while creating a new customer","timestamp":"2024-04-10T10:55:19.763Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T10:55:54.237Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T10:55:54.597Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T10:55:54.740Z"}
{"level":"info","message":"POST /api/v1/customer ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T10:55:59.092Z"}
{"errors":[{"instance":{"address":"not founded the address","bottle_tally":20,"created_at":"2024-04-10T10:55:54.565Z","id":{"val":"uuid_generate_v4()"},"name":"customer-1","route_id":"472ed20b-872c-4aa1-be44-a6e0dcfdbf04","updated_at":"2024-04-10T10:55:54.565Z"},"message":"customer.previous_botlle_tally cannot be null","origin":"CORE","path":"previous_botlle_tally","type":"notNull Violation","validatorArgs":[],"validatorKey":"is_null","validatorName":null,"value":null}],"level":"error","message":"Error while creating a new customer notNull Violation: customer.previous_botlle_tally cannot be null","name":"SequelizeValidationError","stack":"SequelizeValidationError: notNull Violation: customer.previous_botlle_tally cannot be null\n    at InstanceValidator._validate (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\instance-validator.js:78:13)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async InstanceValidator._validateAndRunHooks (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\instance-validator.js:111:7)\n    at async InstanceValidator.validate (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\instance-validator.js:93:12)\n    at async model.save (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:4077:7)\n    at async Function.create (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:2305:12)\n    at async Object.createCustomer (C:\\codes\\Work Code\\Water Management system\\src\\controllers\\customer.controller.ts:37:30)","timestamp":"2024-04-10T10:55:59.130Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T11:04:06.539Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T11:04:06.908Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T11:04:07.009Z"}
{"level":"info","message":"POST /api/v1/customer ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T11:04:10.246Z"}
{"level":"error","message":"Error while creating a new customer null value in column \"previous_botlle_tally\" of relation \"customers\" violates not-null constraint","name":"SequelizeDatabaseError","original":{"code":"23502","column":"previous_botlle_tally","detail":"Failing row contains (db64e153-fb7c-4a20-a48a-a1bc8e4f1df4, customer-1, 472ed20b-872c-4aa1-be44-a6e0dcfdbf04, 20, not founded the address, null, 2024-04-10 11:04:06.878+00, 2024-04-10 11:04:06.878+00).","file":"execMain.c","length":405,"line":"2003","name":"error","parameters":["customer-1","472ed20b-872c-4aa1-be44-a6e0dcfdbf04",20,"not founded the address","2024-04-10 11:04:06.878 +00:00","2024-04-10 11:04:06.878 +00:00"],"routine":"ExecConstraints","schema":"public","severity":"ERROR","sql":"INSERT INTO \"customers\" (\"id\",\"name\",\"route_id\",\"bottle_tally\",\"address\",\"created_at\",\"updated_at\") VALUES (uuid_generate_v4(),$1,$2,$3,$4,$5,$6) RETURNING \"id\",\"name\",\"route_id\",\"bottle_tally\",\"address\",\"created_at\",\"updated_at\";","table":"customers"},"parameters":["customer-1","472ed20b-872c-4aa1-be44-a6e0dcfdbf04",20,"not founded the address","2024-04-10 11:04:06.878 +00:00","2024-04-10 11:04:06.878 +00:00"],"parent":{"code":"23502","column":"previous_botlle_tally","detail":"Failing row contains (db64e153-fb7c-4a20-a48a-a1bc8e4f1df4, customer-1, 472ed20b-872c-4aa1-be44-a6e0dcfdbf04, 20, not founded the address, null, 2024-04-10 11:04:06.878+00, 2024-04-10 11:04:06.878+00).","file":"execMain.c","length":405,"line":"2003","name":"error","parameters":["customer-1","472ed20b-872c-4aa1-be44-a6e0dcfdbf04",20,"not founded the address","2024-04-10 11:04:06.878 +00:00","2024-04-10 11:04:06.878 +00:00"],"routine":"ExecConstraints","schema":"public","severity":"ERROR","sql":"INSERT INTO \"customers\" (\"id\",\"name\",\"route_id\",\"bottle_tally\",\"address\",\"created_at\",\"updated_at\") VALUES (uuid_generate_v4(),$1,$2,$3,$4,$5,$6) RETURNING \"id\",\"name\",\"route_id\",\"bottle_tally\",\"address\",\"created_at\",\"updated_at\";","table":"customers"},"sql":"INSERT INTO \"customers\" (\"id\",\"name\",\"route_id\",\"bottle_tally\",\"address\",\"created_at\",\"updated_at\") VALUES (uuid_generate_v4(),$1,$2,$3,$4,$5,$6) RETURNING \"id\",\"name\",\"route_id\",\"bottle_tally\",\"address\",\"created_at\",\"updated_at\";","stack":"Error\n    at Query.run (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\dialects\\postgres\\query.js:76:25)\n    at C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\sequelize.js:650:28\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.insert (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\dialects\\abstract\\query-interface.js:795:21)\n    at async model.save (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:4154:35)\n    at async Function.create (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:2305:12)\n    at async Object.createCustomer (C:\\codes\\Work Code\\Water Management system\\src\\controllers\\customer.controller.ts:37:30)","timestamp":"2024-04-10T11:04:10.342Z"}
{"level":"info","message":"POST /api/v1/customer ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T11:04:35.432Z"}
{"level":"info","message":"Creating a new customer","timestamp":"2024-04-10T11:04:35.528Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T11:06:26.522Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T11:06:26.898Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T11:06:27.004Z"}
{"level":"info","message":"POST /api/v1/customer ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T11:06:34.513Z"}
{"level":"error","message":"Customer with name customer-1 already exists","timestamp":"2024-04-10T11:06:34.530Z"}
{"level":"error","message":"Error while creating a new customer Customer with name customer-1 already exists","stack":"Error: Customer with name customer-1 already exists\n    at Function.beforeCreate (C:\\codes\\Work Code\\Water Management system\\src\\models\\customer.model.ts:53:23)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Function.runHooks (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\hooks.js:131:7)\n    at async model.save (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:4090:7)\n    at async Function.create (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:2305:12)\n    at async Object.createCustomer (C:\\codes\\Work Code\\Water Management system\\src\\controllers\\customer.controller.ts:37:30)","timestamp":"2024-04-10T11:06:34.554Z"}
{"level":"info","message":"POST /api/v1/customer ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T11:46:57.851Z"}
{"level":"error","message":"Customer with name customer-1 already exists","timestamp":"2024-04-10T11:46:57.884Z"}
{"level":"error","message":"Error while creating a new customer Customer with name customer-1 already exists","stack":"Error: Customer with name customer-1 already exists\n    at Function.beforeCreate (C:\\codes\\Work Code\\Water Management system\\src\\models\\customer.model.ts:53:23)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Function.runHooks (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\hooks.js:131:7)\n    at async model.save (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:4090:7)\n    at async Function.create (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:2305:12)\n    at async Object.createCustomer (C:\\codes\\Work Code\\Water Management system\\src\\controllers\\customer.controller.ts:37:30)","timestamp":"2024-04-10T11:46:57.886Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T11:47:23.775Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T11:47:24.140Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T11:47:24.231Z"}
{"level":"info","message":"POST /api/v1/customer ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T11:47:27.321Z"}
{"level":"error","message":"Customer with name customer-1 already exists","timestamp":"2024-04-10T11:47:27.336Z"}
{"level":"error","message":"Error while creating a new customer Customer with name customer-1 already exists","stack":"Error: Customer with name customer-1 already exists\n    at Function.beforeCreate (C:\\codes\\Work Code\\Water Management system\\src\\models\\customer.model.ts:53:23)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Function.runHooks (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\hooks.js:131:7)\n    at async model.save (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:4090:7)\n    at async Function.create (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:2305:12)\n    at async Object.createCustomer (C:\\codes\\Work Code\\Water Management system\\src\\controllers\\customer.controller.ts:37:30)","timestamp":"2024-04-10T11:47:27.364Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T11:47:37.988Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T11:47:38.325Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T11:47:38.427Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T11:47:44.730Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T11:47:45.124Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T11:47:45.212Z"}
{"level":"info","message":"POST /api/v1/customer ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T11:47:48.434Z"}
{"level":"error","message":"Customer with name customer-1 already exists","timestamp":"2024-04-10T11:47:48.451Z"}
{"level":"error","message":"Error while creating a new customer Customer with name customer-1 already exists","stack":"Error: Customer with name customer-1 already exists\n    at Function.beforeCreate (C:\\codes\\Work Code\\Water Management system\\src\\models\\customer.model.ts:53:23)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Function.runHooks (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\hooks.js:131:7)\n    at async model.save (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:4090:7)\n    at async Function.create (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:2305:12)\n    at async Object.createCustomer (C:\\codes\\Work Code\\Water Management system\\src\\controllers\\customer.controller.ts:37:30)","timestamp":"2024-04-10T11:47:48.478Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T11:48:30.224Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T11:48:30.606Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T11:48:30.703Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T11:48:53.893Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T11:48:54.266Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T11:48:54.357Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T11:49:01.361Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T11:49:01.869Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T11:49:01.946Z"}
{"level":"info","message":"POST /api/v1/customer ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T11:49:06.049Z"}
{"level":"error","message":"Customer with name customer-1 already exists","timestamp":"2024-04-10T11:49:06.069Z"}
{"level":"error","message":"Error while creating a new customer Customer with name customer-1 already exists","stack":"Error: Customer with name customer-1 already exists\n    at Function.beforeCreate (C:\\codes\\Work Code\\Water Management system\\src\\models\\customer.model.ts:53:23)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Function.runHooks (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\hooks.js:131:7)\n    at async model.save (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:4090:7)\n    at async Function.create (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:2305:12)\n    at async Object.createCustomer (C:\\codes\\Work Code\\Water Management system\\src\\controllers\\customer.controller.ts:37:30)","timestamp":"2024-04-10T11:49:06.093Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T11:49:20.291Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T11:49:20.757Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T11:49:20.852Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T11:49:38.068Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T11:49:38.438Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T11:49:38.576Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T11:49:41.257Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T11:49:41.608Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T11:49:41.708Z"}
{"level":"info","message":"POST /api/v1/customer ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T11:49:46.633Z"}
{"level":"error","message":"Customer with name customer-1 already exists","timestamp":"2024-04-10T11:49:46.647Z"}
{"level":"error","message":"Error while creating a new customer Customer with name customer-1 already exists","stack":"Error: Customer with name customer-1 already exists\n    at Function.beforeCreate (C:\\codes\\Work Code\\Water Management system\\src\\models\\customer.model.ts:53:23)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Function.runHooks (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\hooks.js:131:7)\n    at async model.save (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:4090:7)\n    at async Function.create (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:2305:12)\n    at async Object.createCustomer (C:\\codes\\Work Code\\Water Management system\\src\\controllers\\customer.controller.ts:37:30)","timestamp":"2024-04-10T11:49:46.675Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T11:55:02.542Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T11:55:02.859Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T11:55:02.962Z"}
{"level":"info","message":"POST /api/v1/customer ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T11:55:05.448Z"}
{"level":"error","message":"Customer with name customer-1 already exists","timestamp":"2024-04-10T11:55:05.464Z"}
{"level":"error","message":"Error while creating a new customer Customer with name customer-1 already exists","stack":"Error: Customer with name customer-1 already exists\n    at Function.beforeCreate (C:\\codes\\Work Code\\Water Management system\\src\\models\\customer.model.ts:53:23)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Function.runHooks (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\hooks.js:131:7)\n    at async model.save (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:4090:7)\n    at async Function.create (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:2305:12)\n    at async Object.createCustomer (C:\\codes\\Work Code\\Water Management system\\src\\controllers\\customer.controller.ts:37:30)","timestamp":"2024-04-10T11:55:05.493Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T11:56:35.527Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T11:56:35.858Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T11:56:35.957Z"}
{"level":"info","message":"POST /api/v1/customer ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T11:56:37.872Z"}
{"level":"error","message":"Customer with name customer-1 already exists","timestamp":"2024-04-10T11:56:37.889Z"}
{"level":"error","message":"Error while creating a new customer Customer with name customer-1 already exists","stack":"Error: Customer with name customer-1 already exists\n    at Function.beforeCreate (C:\\codes\\Work Code\\Water Management system\\src\\models\\customer.model.ts:53:23)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Function.runHooks (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\hooks.js:131:7)\n    at async model.save (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:4090:7)\n    at async Function.create (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:2305:12)\n    at async Object.createCustomer (C:\\codes\\Work Code\\Water Management system\\src\\controllers\\customer.controller.ts:37:30)","timestamp":"2024-04-10T11:56:37.916Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T11:56:47.362Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T11:56:47.746Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T11:56:47.812Z"}
{"level":"info","message":"POST /api/v1/customer ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T11:56:51.394Z"}
{"level":"error","message":"Customer with name customer-1 already exists","timestamp":"2024-04-10T11:56:51.410Z"}
{"level":"error","message":"Error while creating a new customer Customer with name customer-1 already exists","stack":"Error: Customer with name customer-1 already exists\n    at Function.beforeCreate (C:\\codes\\Work Code\\Water Management system\\src\\models\\customer.model.ts:53:23)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Function.runHooks (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\hooks.js:131:7)\n    at async model.save (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:4090:7)\n    at async Function.create (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:2305:12)\n    at async Object.createCustomer (C:\\codes\\Work Code\\Water Management system\\src\\controllers\\customer.controller.ts:37:30)","timestamp":"2024-04-10T11:56:51.438Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T11:57:09.438Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T11:57:09.920Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T11:57:10.042Z"}
{"level":"info","message":"POST /api/v1/customer ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T11:57:14.365Z"}
{"level":"error","message":"Customer with name customer-1 already exists","timestamp":"2024-04-10T11:57:14.390Z"}
{"level":"error","message":"Error while creating a new customer Customer with name customer-1 already exists","stack":"Error: Customer with name customer-1 already exists\n    at Function.beforeCreate (C:\\codes\\Work Code\\Water Management system\\src\\models\\customer.model.ts:53:23)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Function.runHooks (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\hooks.js:131:7)\n    at async model.save (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:4090:7)\n    at async Function.create (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:2305:12)\n    at async Object.createCustomer (C:\\codes\\Work Code\\Water Management system\\src\\controllers\\customer.controller.ts:37:30)","timestamp":"2024-04-10T11:57:14.418Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T11:57:40.509Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T11:57:40.914Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T11:57:41.008Z"}
{"level":"info","message":"POST /api/v1/customer ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T11:57:42.900Z"}
{"level":"error","message":"Customer with name customer-1 already exists","timestamp":"2024-04-10T11:57:42.915Z"}
{"level":"error","message":"Error while creating a new customer Customer with name customer-1 already exists","stack":"Error: Customer with name customer-1 already exists\n    at Function.beforeCreate (C:\\codes\\Work Code\\Water Management system\\src\\models\\customer.model.ts:53:23)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Function.runHooks (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\hooks.js:131:7)\n    at async model.save (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:4090:7)\n    at async Function.create (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:2305:12)\n    at async Object.createCustomer (C:\\codes\\Work Code\\Water Management system\\src\\controllers\\customer.controller.ts:37:30)","timestamp":"2024-04-10T11:57:42.941Z"}
{"level":"info","message":"POST /api/v1/customer ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T11:57:50.424Z"}
{"level":"error","message":"Customer with name customer-1 already exists","timestamp":"2024-04-10T11:57:50.432Z"}
{"level":"error","message":"Error while creating a new customer Customer with name customer-1 already exists","stack":"Error: Customer with name customer-1 already exists\n    at Function.beforeCreate (C:\\codes\\Work Code\\Water Management system\\src\\models\\customer.model.ts:53:23)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Function.runHooks (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\hooks.js:131:7)\n    at async model.save (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:4090:7)\n    at async Function.create (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:2305:12)\n    at async Object.createCustomer (C:\\codes\\Work Code\\Water Management system\\src\\controllers\\customer.controller.ts:37:30)","timestamp":"2024-04-10T11:57:50.433Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T11:58:15.904Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T11:58:16.304Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T11:58:16.375Z"}
{"level":"info","message":"POST /api/v1/customer ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T11:58:24.052Z"}
{"level":"error","message":"Customer with name customer-1 already exists","timestamp":"2024-04-10T11:58:24.065Z"}
{"level":"error","message":"Error while creating a new customer Customer with name customer-1 already exists","stack":"Error: Customer with name customer-1 already exists\n    at Function.beforeCreate (C:\\codes\\Work Code\\Water Management system\\src\\models\\customer.model.ts:53:23)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Function.runHooks (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\hooks.js:131:7)\n    at async model.save (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:4090:7)\n    at async Function.create (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:2305:12)\n    at async Object.createCustomer (C:\\codes\\Work Code\\Water Management system\\src\\controllers\\customer.controller.ts:37:30)","timestamp":"2024-04-10T11:58:24.089Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T11:58:39.017Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T11:58:39.469Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T11:58:39.576Z"}
{"level":"info","message":"POST /api/v1/customer ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T11:58:41.290Z"}
{"level":"error","message":"Customer with name customer-1 already exists","timestamp":"2024-04-10T11:58:41.305Z"}
{"level":"error","message":"Error while creating a new customer Customer with name customer-1 already exists","stack":"Error: Customer with name customer-1 already exists\n    at Function.beforeCreate (C:\\codes\\Work Code\\Water Management system\\src\\models\\customer.model.ts:53:23)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Function.runHooks (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\hooks.js:131:7)\n    at async model.save (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:4090:7)\n    at async Function.create (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:2305:12)\n    at async Object.createCustomer (C:\\codes\\Work Code\\Water Management system\\src\\controllers\\customer.controller.ts:37:30)","timestamp":"2024-04-10T11:58:41.325Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T11:59:10.826Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T11:59:11.185Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T11:59:11.283Z"}
{"level":"info","message":"POST /api/v1/customer ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T11:59:13.654Z"}
{"level":"error","message":"Customer with name customer-1 already exists","timestamp":"2024-04-10T11:59:13.670Z"}
{"level":"error","message":"Error while creating a new customer Customer with name customer-1 already exists","stack":"Error: Customer with name customer-1 already exists\n    at Function.beforeCreate (C:\\codes\\Work Code\\Water Management system\\src\\models\\customer.model.ts:53:23)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Function.runHooks (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\hooks.js:131:7)\n    at async model.save (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:4090:7)\n    at async Function.create (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:2305:12)\n    at async Object.createCustomer (C:\\codes\\Work Code\\Water Management system\\src\\controllers\\customer.controller.ts:37:30)","timestamp":"2024-04-10T11:59:13.696Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T11:59:25.372Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T11:59:25.707Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T11:59:25.804Z"}
{"level":"info","message":"POST /api/v1/customer ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T11:59:28.017Z"}
{"level":"error","message":"Customer with name customer-1 already exists","timestamp":"2024-04-10T11:59:28.036Z"}
{"level":"error","message":"Error while creating a new customer Customer with name customer-1 already exists","stack":"Error: Customer with name customer-1 already exists\n    at Function.beforeCreate (C:\\codes\\Work Code\\Water Management system\\src\\models\\customer.model.ts:53:23)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Function.runHooks (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\hooks.js:131:7)\n    at async model.save (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:4090:7)\n    at async Function.create (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:2305:12)\n    at async Object.createCustomer (C:\\codes\\Work Code\\Water Management system\\src\\controllers\\customer.controller.ts:37:30)","timestamp":"2024-04-10T11:59:28.067Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T11:59:51.991Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T11:59:52.357Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T11:59:52.464Z"}
{"level":"info","message":"POST /api/v1/customer ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T11:59:54.597Z"}
{"level":"error","message":"Customer with name customer-1 already exists","timestamp":"2024-04-10T11:59:54.663Z"}
{"level":"error","message":"Error while creating a new customer Customer with name customer-1 already exists","stack":"Error: Customer with name customer-1 already exists\n    at Function.beforeCreate (C:\\codes\\Work Code\\Water Management system\\src\\models\\customer.model.ts:53:23)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Function.runHooks (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\hooks.js:131:7)\n    at async model.save (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:4090:7)\n    at async Function.create (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:2305:12)\n    at async Object.createCustomer (C:\\codes\\Work Code\\Water Management system\\src\\controllers\\customer.controller.ts:37:30)","timestamp":"2024-04-10T11:59:54.712Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T12:00:33.849Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T12:00:34.213Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T12:00:34.318Z"}
{"level":"info","message":"POST /api/v1/customer ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T12:00:36.629Z"}
{"level":"error","message":"Customer with name customer-1 already exists","timestamp":"2024-04-10T12:00:36.650Z"}
{"level":"error","message":"Error while creating a new customer Customer with name customer-1 already exists","stack":"Error: Customer with name customer-1 already exists\n    at Function.beforeCreate (C:\\codes\\Work Code\\Water Management system\\src\\models\\customer.model.ts:53:23)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Function.runHooks (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\hooks.js:131:7)\n    at async model.save (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:4090:7)\n    at async Function.create (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:2305:12)\n    at async Object.createCustomer (C:\\codes\\Work Code\\Water Management system\\src\\controllers\\customer.controller.ts:37:30)","timestamp":"2024-04-10T12:00:36.679Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T12:00:59.242Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T12:00:59.659Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T12:00:59.765Z"}
{"level":"info","message":"POST /api/v1/customer ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T12:01:01.575Z"}
{"level":"error","message":"Customer with name customer-1 already exists","timestamp":"2024-04-10T12:01:01.597Z"}
{"level":"error","message":"Error while creating a new customer Customer with name customer-1 already exists","stack":"Error: Customer with name customer-1 already exists\n    at Function.beforeCreate (C:\\codes\\Work Code\\Water Management system\\src\\models\\customer.model.ts:53:23)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Function.runHooks (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\hooks.js:131:7)\n    at async model.save (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:4090:7)\n    at async Function.create (C:\\codes\\Work Code\\Water Management system\\node_modules\\sequelize\\src\\model.js:2305:12)\n    at async Object.createCustomer (C:\\codes\\Work Code\\Water Management system\\src\\controllers\\customer.controller.ts:37:30)","timestamp":"2024-04-10T12:01:01.628Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T12:01:10.675Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T12:01:11.066Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T12:01:11.167Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T12:01:27.315Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T12:01:27.747Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T12:01:27.929Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T12:01:31.439Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T12:01:31.808Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T12:01:31.924Z"}
{"level":"info","message":"GET /api/v1/customer ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T12:02:19.763Z"}
{"level":"error","message":"User not found while verifying token","timestamp":"2024-04-10T12:02:19.801Z"}
{"level":"info","message":"GET /api/v1/customer ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T12:02:31.898Z"}
{"level":"info","message":"Getting all the customers","timestamp":"2024-04-10T12:02:31.927Z"}
{"level":"info","message":"GET /api/v1/customer/860a6485-8a9b-4288-980d-db6155850d87 ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T12:11:11.348Z"}
{"level":"info","message":"GET /api/v1/customer/860a6485-8a9b-4288-980d-db6155850d87 ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T12:11:34.273Z"}
{"level":"info","message":"Getting the customer with id 860a6485-8a9b-4288-980d-db6155850d87","timestamp":"2024-04-10T12:11:34.338Z"}
{"level":"info","message":"GET /api/v1/customer/route/472ed20b-872c-4aa1-be44-a6e0dcfdbf04 ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T12:14:46.676Z"}
{"level":"info","message":"GET /api/v1/customer/route/472ed20b-872c-4aa1-be44-a6e0dcfdbf04 ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T12:38:00.350Z"}
{"level":"info","message":"GET /api/v1/customer/route/472ed20b-872c-4aa1-be44-a6e0dcfdbf0 ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T12:38:07.518Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T12:38:34.798Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T12:38:35.207Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T12:38:35.303Z"}
{"level":"info","message":"GET /api/v1/customer/route/472ed20b-872c-4aa1-be44-a6e0dcfdbf05 ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T12:38:37.190Z"}
{"level":"info","message":"GET /api/v1/customer/route/472ed20b-872c-4aa1-be44-a6e0dcfdbf04 ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T12:40:56.916Z"}
{"level":"info","message":"GET /api/v1/routes ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T12:42:02.493Z"}
{"level":"info","message":"Getting all the routes","timestamp":"2024-04-10T12:42:02.519Z"}
{"level":"info","message":"POST /api/v1/customer ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T12:42:41.529Z"}
{"level":"info","message":"Creating a new customer","timestamp":"2024-04-10T12:42:41.624Z"}
{"level":"info","message":"GET /api/v1/customer/route/472ed20b-872c-4aa1-be44-a6e0dcfdbf04 ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T12:42:54.316Z"}
{"level":"info","message":"GET /api/v1/customer/route/ee0b8907-e7bd-471f-849c-d81e863f957d ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T12:43:16.889Z"}
{"level":"info","message":"POST /api/v1/customer ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T12:43:40.048Z"}
{"level":"info","message":"Creating a new customer","timestamp":"2024-04-10T12:43:40.133Z"}
{"level":"info","message":"GET /api/v1/customer/route/ee0b8907-e7bd-471f-849c-d81e863f957d ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T12:43:46.452Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T12:44:40.358Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T12:44:40.582Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T12:44:40.645Z"}
{"level":"info","message":"POST /api/v1/trucks ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T12:46:16.663Z"}
{"level":"info","message":"Creating a new truck","timestamp":"2024-04-10T12:46:16.784Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T12:46:39.533Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T12:46:39.763Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T12:46:39.825Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T12:46:43.445Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T12:46:43.673Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T12:46:43.738Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T12:46:47.283Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T12:46:47.513Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T12:46:47.580Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T12:46:51.026Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T12:46:51.264Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T12:46:51.329Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T12:46:56.105Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T12:46:56.350Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T12:46:56.404Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T12:47:00.315Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T12:47:00.547Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T12:47:00.609Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T12:47:32.763Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T12:47:32.998Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T12:47:33.063Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T12:47:38.782Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T12:47:39.061Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T12:47:39.116Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T12:47:46.498Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T12:47:46.726Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T12:47:46.788Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T12:47:50.698Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T12:47:50.930Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T12:47:50.990Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T12:57:50.297Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T12:57:50.534Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T12:57:50.600Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T12:59:53.920Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T12:59:54.159Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T12:59:54.222Z"}
{"level":"info","message":"POST /api/v1/trucks ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T12:59:58.540Z"}
{"level":"error","message":"Truck with name 45T already exists","timestamp":"2024-04-10T12:59:58.554Z"}
{"level":"error","message":"Error while creating a new truck","timestamp":"2024-04-10T12:59:58.555Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T13:00:57.129Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T13:00:57.362Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T13:00:57.424Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T13:01:02.965Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T13:01:03.190Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T13:01:03.256Z"}
{"level":"info","message":"POST /api/v1/trucks ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T13:01:04.989Z"}
{"level":"error","message":"Truck with name 45T already exists","timestamp":"2024-04-10T13:01:05.002Z"}
{"level":"error","message":"Error while creating a new truck","timestamp":"2024-04-10T13:01:05.003Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T13:01:19.195Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T13:01:19.426Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T13:01:19.493Z"}
{"level":"info","message":"POST /api/v1/trucks ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T13:01:22.651Z"}
{"level":"error","message":"Truck with name 45T already exists","timestamp":"2024-04-10T13:01:22.665Z"}
{"level":"error","message":"Error while creating a new truck","timestamp":"2024-04-10T13:01:22.666Z"}
{"level":"info","message":"GET /api/v1/trucks ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T13:06:34.269Z"}
{"level":"info","message":"GET /api/v1/trucks ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T13:06:52.965Z"}
{"level":"info","message":"Getting all the trucks","timestamp":"2024-04-10T13:06:52.984Z"}
{"level":"info","message":"POST /api/v1/trucks ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T13:07:12.046Z"}
{"level":"info","message":"Creating a new truck","timestamp":"2024-04-10T13:07:12.211Z"}
{"level":"info","message":"GET /api/v1/trucks ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T13:07:15.551Z"}
{"level":"info","message":"Getting all the trucks","timestamp":"2024-04-10T13:07:15.556Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T13:08:11.416Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T13:08:11.689Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T13:08:11.753Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T13:09:25.848Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T13:09:26.080Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T13:09:26.140Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T13:11:37.732Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T13:11:37.960Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T13:11:38.021Z"}
{"level":"info","message":"GET /api/v1/trucks/4 ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T13:12:10.382Z"}
{"level":"info","message":"GET /api/v1/trucks/4 ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T13:12:28.211Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T13:13:22.709Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T13:13:22.947Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T13:13:23.009Z"}
{"level":"info","message":"GET /api/v1/trucks/4 ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T13:13:26.651Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T13:13:41.285Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T13:13:41.532Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T13:13:41.598Z"}
{"level":"info","message":"GET /api/v1/trucks/search/4 ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T13:13:44.027Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T13:14:11.215Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T13:14:11.456Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T13:14:11.519Z"}
{"level":"info","message":"GET /api/v1/trucks/search/4 ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T13:14:14.471Z"}
{"level":"info","message":"Getting the trucks with similar name to 4","timestamp":"2024-04-10T13:14:14.486Z"}
{"level":"info","message":"GET /api/v1/trucks/search/5 ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T13:14:21.538Z"}
{"level":"info","message":"Getting the trucks with similar name to 5","timestamp":"2024-04-10T13:14:21.545Z"}
{"level":"info","message":"GET /api/v1/trucks/search/T ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T13:14:27.319Z"}
{"level":"info","message":"Getting the trucks with similar name to T","timestamp":"2024-04-10T13:14:27.326Z"}
{"level":"info","message":"GET /api/v1/trucks/search/U ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T13:14:32.736Z"}
{"level":"info","message":"Getting the trucks with similar name to U","timestamp":"2024-04-10T13:14:32.742Z"}
{"level":"info","message":"POST /api/v1/trucks ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T13:14:56.745Z"}
{"level":"info","message":"Creating a new truck","timestamp":"2024-04-10T13:14:56.819Z"}
{"level":"info","message":"GET /api/v1/trucks/search/67 ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T13:15:06.641Z"}
{"level":"info","message":"Getting the trucks with similar name to 67","timestamp":"2024-04-10T13:15:06.647Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T17:52:38.742Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T17:52:39.143Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T17:52:39.236Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T17:53:32.550Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T17:53:33.033Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T17:53:33.105Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T17:53:39.225Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T17:53:39.748Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T17:53:39.826Z"}
{"level":"info","message":"PUT /api/v1/trucks/6d515ce9-1cb2-4cc0-949d-c0b6b673817c ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T17:56:28.794Z"}
{"level":"info","message":"PUT /api/v1/trucks/6d515ce9-1cb2-4cc0-949d-c0b6b673817c ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T17:56:46.968Z"}
{"level":"error","message":"Truck with name 45U already exists","timestamp":"2024-04-10T17:56:46.999Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T17:57:00.070Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T17:57:00.516Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T17:57:00.613Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T17:57:06.306Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T17:57:06.752Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T17:57:06.819Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T17:57:17.176Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T17:57:17.648Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T17:57:17.729Z"}
{"level":"info","message":"PUT /api/v1/trucks/6d515ce9-1cb2-4cc0-949d-c0b6b673817c ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T17:58:32.969Z"}
{"level":"info","message":"PUT /api/v1/trucks/6d515ce9-1cb2-4cc0-949d-c0b6b673817c ::1 PostmanRuntime/7.37.3","timestamp":"2024-04-10T17:58:37.654Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T18:02:09.311Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T18:02:09.754Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T18:02:09.826Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T18:03:04.113Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T18:03:04.605Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T18:03:04.676Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T18:03:10.769Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T18:03:11.298Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T18:03:11.405Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T18:03:20.517Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T18:03:21.069Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T18:03:21.175Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T18:03:48.515Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T18:03:48.909Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T18:03:49.008Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T18:04:17.549Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T18:04:18.013Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T18:04:18.101Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T18:04:24.232Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T18:04:24.718Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T18:04:24.820Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T18:04:52.198Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T18:04:52.671Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T18:04:52.761Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T18:04:56.073Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T18:04:56.520Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T18:04:56.611Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T18:05:01.178Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T18:05:01.603Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T18:05:01.723Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T18:05:13.079Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T18:05:13.629Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T18:05:13.739Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T18:05:42.060Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T18:05:42.582Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T18:05:42.663Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T18:07:06.401Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T18:07:06.931Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T18:07:07.011Z"}
{"level":"info","message":"Environment: testing","timestamp":"2024-04-10T18:21:15.970Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2024-04-10T18:21:16.423Z"}
{"level":"info","message":"Database is connected","timestamp":"2024-04-10T18:21:16.524Z"}
